#正则表达式

str='aabdfefkjkli'

aa=re.match('\D+',str)                    #从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回none
bb=aa.group()
print(bb)
#
aa=re.search('\D+',str)                     #扫描整个字符串并返回第一个成功的匹配
bb=aa.group()
print(bb)

#
aa1=re.findall('\D+','aaccbb')                         #在字符串中找到正则表达式所匹配的所有子串，并返回一个列表，如果没有找到匹配的，则返回空列表

print(aa1)
print(type(aa1))

#
bb=re.split('\W+', 'runoob, runoob, runoob.')                  #按照能够匹配的子串将字符串分割后返回列表
print(bb)


#正则表达式模式

^       匹配字符串的开头
$       匹配字符串的末尾。
a| b    匹配a或b
\w      匹配字母数字及下划线
\W      匹配非字母数字及下划线 
\d      匹配任意数字，等价于 [0-9].
\D      匹配任意非数字




